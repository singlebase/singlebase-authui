
/**
 * ==
 * Singlebase.cloud
 * A backend-as-a-service (BaaS), featuring:
 * - LLM & AI functionalities
 * - VectorDB: Vector Database for AI and LLM apps
 * - Datastore: NoSQL Document Database
 * - Authentication: For authentication
 * - Filestore: For file storage
 * - Search: For text search and vector search
 * - Images: Image service to manipulate image
 * 
 * Website: https://singlebase.cloud
 * ==
 * Pkg: singlebase-js@0.1.1
 * Desc: Javascript SDK for Singlebase's API
 * Doc: https://docs.singlebasecloud.com/sdk/javascript
 * ==
 */

const t=t=>"object"==typeof t&&null!==t&&Object.getPrototypeOf(t)===Object.prototype,e=t=>"string"==typeof t||t instanceof String,r=t=>null==t||""===t||Array.isArray(t)&&0===t.length||"object"==typeof t&&0===Object.keys(t).length,a=e=>{if(null===e||!t(e))return e;let r=e.constructor();for(const t in e)t in e&&(r[t]=a(e[t]));return r},i=(t,e=null)=>({ok:!0,data:t,action:e,error:null}),n=(t,e=null)=>({ok:!1,data:null,action:e,error:t}),s=(t="__default__")=>((t="__default__",e={})=>{const{namespace:r="c0",storage:a=window.sessionStorage}=e,i=`${r}:${t}`,n=t=>{if(!t)return{};try{return JSON.parse(t)}catch(t){return console.warn(`Failed to parse data for namespace "${i}". Resetting cache.`),{}}},s=()=>n(a.getItem(i)),o=t=>{try{a.setItem(i,JSON.stringify(t))}catch(t){console.error(`Failed to set data for namespace "${i}":`,t)}},l=t=>{const e=s();return t in e&&(delete e[t],o(e),!0)};return{namespace:i,set:(t,e,r=0)=>{const a=s(),i=r>0?Date.now()+1e3*r:0;return a[t]=[i,e],o(a),e},get:t=>{const e=s()[t];if(!e)return;const[r,a]=e;return 0===r||Date.now()<=r?a:void l(t)},remove:l,purge:()=>{a.removeItem(i)},parseData:n}})(t,{storage:window.localStorage});function o(t){const e=t.match(/\/?([a-f0-9]{32})(?:--\w+)?(?:\.\w+)?$/);return e?e[1]:null}const l="token",u="nonce";class c{constructor(t,e,r=!0){this._dispatch=t,this._storage=e,this._autoRefreshToken=r,this.settings=null,this._autoRefreshTicker=null,this._initialized=!1,this._refreshInProgress=!1,this._refreshFailed=!1,this._retryCount=0,this._state=(t=>{const e=[];return new Proxy(t,{get:(t,r)=>"subscribe"===r?t=>(e.push(t),()=>e.splice(e.indexOf(t),1)):t[r],set:(t,r,i)=>{const n=a(t);if("__patch__"===r)for(const e of Object.keys(i))t[e]=i[e];else t[r]=i;return e.forEach((e=>e(i,n,t))),!0},deleteProperty:(t,r)=>{if(r in t){const i=a(t[r]),n=a(t);return delete t[r],e.forEach((e=>e(i,n,t))),!0}return!1}})})({user_profile:null,token:null}),this.initialize()}async initialize(){this._initialized||(await this.loadSettings(),this._addStorageEventListener(),await this._loadFromCache(),this._autoRefreshToken&&this._startAutoRefreshToken(),this._initialized=!0)}get userKey(){var t,e;return(null===(e=null===(t=this._state)||void 0===t?void 0:t.user_profile)||void 0===e?void 0:e.user_key)||null}get userProfile(){var t;return a(null===(t=this._state)||void 0===t?void 0:t.user_profile)}get fullName(){var t;return(t=>{const e=t.split(" ")[0];return[e,t.substring(e.length).trim()]})(null===(t=this.userProfile)||void 0===t?void 0:t.display_name)}get email(){var t,e;return null===(e=null===(t=this._state)||void 0===t?void 0:t.user_profile)||void 0===e?void 0:e.email}get isAuthenticated(){var t,e;return!(!(null===(e=null===(t=this._state)||void 0===t?void 0:t.token)||void 0===e?void 0:e.id_token)||!this._isTokenValid(this._state.token))}get idToken(){var t,e;return this.isAuthenticated&&(null===(e=null===(t=this._state)||void 0===t?void 0:t.token)||void 0===e?void 0:e.id_token)||null}async updateAccount(t){var e;try{const r=await this._dispatch({action:"auth.update_account",...t});if(r.ok){this._setAuthData(r.data);const t=null===(e=r.data)||void 0===e?void 0:e.user_profile;return i(t)}return n(r.error)}catch(t){return n(t)}}async updateProfile(t){var e;try{if(!await this.getIdToken())return n("Invalid or missing ID token.");const r=this._getToken();if(!r)return n("Missing token.");const{aud:a,id_token:s,refresh_token:o}=r,l=await this._dispatch({action:"auth.update_profile",aud:a,id_token:s,refresh_token:o,data:t});if(l.ok){this._setAuthData(l.data);const t=null===(e=l.data)||void 0===e?void 0:e.user_profile;return i(t)}return n(l.error)}catch(t){return n(t)}}async sendOTP(t){try{const e=await this._dispatch({action:"auth.send_otp",...t});return e.ok?i(!0):n(e.error)}catch(t){return n(t)}}async signUpWithPassword(t){try{this._clearState();const e=await this._dispatch({...t,action:"auth.signup"});return e.ok?i(e.data):n(e.error)}catch(t){return n(t)}finally{this._clearState(),this._purgeCache()}}async signInWithPassword(t){var e;try{this._clearState();const r=await this._dispatch({grant_type:"password",...t,action:"auth.signin"});if(r.ok){this._setAuthData(r.data);const t=null===(e=r.data)||void 0===e?void 0:e.user_profile;return i(t)}return this._clearState(),this._purgeCache(),n(r.error)}catch(t){return this._clearState(),this._purgeCache(),n(t)}}async signInWithOAuth(t){try{this._clearState();const e=await this.getNonce();if(!e)return this._clearState(),this._purgeCache(),n("Failed to obtain nonce.");this._storage.set(u,e);const r=await this._dispatch({action:"auth.oauth_connect",intent:"signup",provider:t,nonce:e});if(r.ok){const t=r.data;return i({redirectURL:null==t?void 0:t.oauth_redirect_url,provider:null==t?void 0:t.oauth_provider,action:"REDIRECT"})}return n(r.error)}catch(t){return this._clearState(),this._purgeCache(),n(t)}}async signInWithOAuthAccessCode(t,e=null){var r;try{if(this._stopAutoRefreshToken(),e||(e=this._storage.get(u)),!e)return this._clearState(),this._purgeCache(),n("Missing nonce.");const a=this._getToken();if(!a)return this._clearState(),this._purgeCache(),n("Missing token.");const{aud:s,id_token:o,refresh_token:l}=a,c=await this._dispatch({action:"auth.signin",grant_type:"access_code",access_code:t,nonce:e,id_token:o,refresh_token:l});if(c.ok){this._setAuthData(c.data);const t=null===(r=c.data)||void 0===r?void 0:r.user_profile;return i(t)}return this._clearState(),this._purgeCache(),n(c.error||"OAuth access code sign-in failed.")}catch(t){return this._clearState(),this._purgeCache(),n(t)}}async signOut(){try{if(await this.getIdToken(!1)){const t=this._getToken();if(!t)return!1;return(await this._dispatch({action:"auth.signout",id_token:t.id_token,aud:t.aud})).ok}return!0}catch(t){return!1}finally{this._clearState(),this._purgeCache()}}async getUser(){var t;return await this.getIdToken()&&(null===(t=this._state)||void 0===t?void 0:t.user_profile)||null}async getNonce(){var t;try{const e=await this._dispatch({action:"auth.nonce"});if(e.ok)return(null===(t=e.data)||void 0===t?void 0:t.nonce)||null}catch(t){}return null}async getIdToken(t=!0){const e=this._getToken();if(e){if(this._isTokenValid(e))return e.id_token||null;if(t&&e.refresh_token&&await this._refreshToken(e.refresh_token,e.id_token))return this.getIdToken(!1)}return null}async refreshSession(){const t=this._getToken();return t&&t.refresh_token&&t.id_token&&await this._refreshToken(t.refresh_token,t.id_token)?this.getIdToken(!1):null}async loadSettings(){try{const t=await this._dispatch({action:"auth.settings"});return t.ok?(this.settings=t.data,i(t.data)):(this.settings=null,n(t.error))}catch(t){return this.settings=null,n(t)}}onStateChanged(t){return this._state.subscribe(t)}onAuthStateChanged(t){var e;return t(a(null===(e=this._state)||void 0===e?void 0:e.user_profile)),this.onStateChanged(((e,r)=>{var i,n;(null===(i=null==e?void 0:e.token)||void 0===i?void 0:i.id_token)!==(null===(n=null==r?void 0:r.token)||void 0===n?void 0:n.id_token)&&t(a(null==e?void 0:e.user_profile))}))}async refreshAuthState(){return this._loadFromCache()}async _loadFromCache(){const t=this._getCachedToken();if(t){if(this._isTokenValid(t))return this._setState(t),!0;if(t.refresh_token)return await this._refreshToken(t.refresh_token,t.id_token)}else this._clearState();return!1}_getToken(){return this._getCachedToken()}_getCachedToken(){return this._storage.get(l)}_purgeCache(){return this._storage.remove(l)}_sleep(t){return new Promise((e=>setTimeout(e,t)))}async _refreshToken(t,e){if(!t||!e)return!1;if(this._refreshInProgress)return!1;this._refreshInProgress=!0;try{const r=await this._dispatch({action:"auth.refresh_token",refresh_token:t,id_token:e});return(null==r?void 0:r.ok)?(this._setAuthData(r.data),this._refreshFailed=!1,this._retryCount=0,!0):(this._refreshFailed=!0,!1)}catch(t){return this._refreshFailed=!0,!1}finally{this._refreshInProgress=!1}}_isTokenValid(t=null){var e,r;const a=t||this._getToken();if((null==a?void 0:a.id_token)&&(null===(e=null==a?void 0:a.token_info)||void 0===e?void 0:e.exp)){return 1e3*(null===(r=null==a?void 0:a.token_info)||void 0===r?void 0:r.exp)-6e4>Date.now()}return!1}_setAuthData(t){var e;this._stopAutoRefreshToken();const r=Date.now(),a={...t,expires_at:r+1e3*parseInt(null===(e=null==t?void 0:t.token_info)||void 0===e?void 0:e.ttl,10),created_at:r};this._setState(a),this._storage.set(l,{...t,_rev:r}),this._startAutoRefreshToken()}_clearState(){this._stopAutoRefreshToken(),this._state.__patch__={user_profile:null,token:null}}_setState(t){this._state.__patch__={user_profile:(null==t?void 0:t.user_profile)||null,token:t||null}}_addStorageEventListener(){window.addEventListener("storage",this._storageEventListener.bind(this),!1)}_removeStorageEventListener(){window.removeEventListener("storage",this._storageEventListener.bind(this),!1)}_storageEventListener(t){var e,r,a,i;if(t.key===this._storage.namespace){const n=null===(r=null===(e=this._storage.parseData(t.oldValue))||void 0===e?void 0:e.token)||void 0===r?void 0:r[1],s=null===(i=null===(a=this._storage.parseData(t.newValue))||void 0===a?void 0:a.token)||void 0===i?void 0:i[1];(null==n?void 0:n._rev)!==(null==s?void 0:s._rev)&&this._loadFromCache()}}async _startAutoRefreshToken(){await this._stopAutoRefreshToken(),this._autoRefreshTicker=window.setInterval((()=>{this._refreshFailed||this.getIdToken()}),6e4)}async _stopAutoRefreshToken(){this._autoRefreshTicker&&(clearInterval(this._autoRefreshTicker),this._autoRefreshTicker=null)}}const h=t=>!("object"!=typeof t||t instanceof FormData||t.pipe),d=(t,e,r=null)=>{let[a,i=""]=t.split("?");const n=new URLSearchParams({...Object.fromEntries(new URLSearchParams(e)),...Object.fromEntries(new URLSearchParams(i))}).toString();if(n&&(a+="?"+n),!r)return a;return new URL(a,r).href};async function _(t){const e=t.query?d(t.url,t.query):t.url,r={method:t.method||"GET",headers:{...t.headers}};t.data&&(h(t.data)?(r.body=JSON.stringify(t.data),r.headers["Content-Type"]="application/json"):r.body=t.data);const a=await window.fetch(e,r),i=a.headers.get("content-type");return a.data=await(i&&i.includes("application/json")?a.json():a.text()),a.ok||(a.error=`Error ${a.status}: ${a.statusText}`),a}class f{constructor(t){this._dispatch=t}_createSuccess(t={},e=null){return{ok:!0,data:t,meta:e,error:null}}_createError(t){return{ok:!1,data:null,meta:null,error:{message:t}}}async get(t){const e=o(t);if(e){const t=await this._dispatch({action:"file.info",_key:e});return t.ok?this._createSuccess(null==t?void 0:t.data,null==t?void 0:t.meta):this._createError(null==t?void 0:t.error)}return this._createError("INVALID FILE OR FILEKEY")}async getURL(t){var e;const r=await this.get(t);return r.ok?null===(e=r.data)||void 0===e?void 0:e.url:null}async makePublic(t,e=!1){const r=o(t);if(r){const t=await this._dispatch({action:"file.update",_key:r,public_read:e});return t.ok?this._createSuccess(null==t?void 0:t.data,null==t?void 0:t.meta):this._createError(null==t?void 0:t.error)}return this._createError("INVALID FILE OR FILEKEY")}async setMetadata(t,e={}){const r=o(t);if(r){const t=await this._dispatch({action:"file.update",_key:r,metadata:e});return t.ok?this._createSuccess(null==t?void 0:t.data,null==t?void 0:t.meta):this._createError(null==t?void 0:t.error)}return this._createError("INVALID FILE OR FILEKEY")}async upload(t,e={}){var r,a;const i={public_read:!1,...e};try{const e=await this._dispatch({...i,action:"file.preupload",filename:t.name,content_type:t.type});if(!e.ok)return this._createError(e.error||{error:"PREUPLOAD FAILED"});const n=null===(r=e.data)||void 0===r?void 0:r.presigned_data;null===(a=e.data)||void 0===a||a.info;if(!n||!n.url||!n.fields)return this._createError(e.error||{error:"INVALID PRESIGNED DATA"});const s=new FormData;Object.entries(n.fields).forEach((([t,e])=>{s.append(t,e)})),s.append("file",t);try{const t=await _({method:"POST",url:n.url,data:s});if(t.ok){const t=await this._dispatch({action:"file.postupload",presigned_data:n,_key:null==n?void 0:n._key});return(null==t?void 0:t.ok)?this._createSuccess(null==t?void 0:t.data):this._createError("ERROR POSTUPLOAD")}return await this._dispatch({action:"file.upload_error",presigned_data:n,_key:null==n?void 0:n._key,errors:t.error}),this._createError(t.error)}catch(t){return await this._dispatch({action:"file.upload_error",presigned_data:n,_key:null==n?void 0:n._key,errors:`${t}`}),this._createError(t)}}catch(t){return await this._dispatch({action:"file.uploaderror",errors:{error:"UNDEFINED ERROR"}}),this._createError("UNDEFINED ERROR")}}async delete(t){const e=o(t);return(await this._dispatch({action:"file.delete",_key:e})).ok}async query(t){if(!t.filters)throw new Error("Filestore: 'filters' parameter is required for storage.query.");return await this._dispatch({...t,action:"file.query"})}}const p=t=>function(t,e){if("string"!=typeof t)throw new Error("Input must be a string.");if(!Array.isArray(e))throw new Error("Prefixes must be an array.");return e.some((e=>t.startsWith(e)))}(t,["db.","collection."]);class v{constructor(t){this._dispatch=t}_createError(t){return{ok:!1,data:null,meta:null,error:{message:t}}}async _performAction(t,e,r={}){if(!p(t))return this._createError(`Invalid action name in the datastore: ${t}`);let a={...r};a.action=t,e&&(a.collection=e);try{return await this._dispatch(a)}catch(e){return this._createError(e.message||`Unknown error in Datastore._performAction: ${t}.`)}}async dispatch(t,e={}){let r=null;return(null==e?void 0:e.collectionName)&&(r=null==e?void 0:e.collectionName,delete e.collectionName),await this._performAction(t,r,e)}async query(e,r={}){let a=null,i={};return t(r)&&(i={...i,criteria:r}),(null==i?void 0:i.collectionName)&&(a=null==i?void 0:i.collectionName,delete i.collectionName),i.query=e,await this._performAction("db.fetch",a,i)}async set(r,a,i={}){let n={};if(!e(r))return this._createError("Datatsore.set: Collection name must be a string.");if(e(a)){if(!t(i))return this._createError("Datatsore.set(collectionName:str, _key:str, data:{}): #data must be a plain object");if(null==i?void 0:i._key)return this._createError("Datatsore.set: _key conflict. Ensure sure data._key doesn't exists ");n={_key:a,...i}}else n=a;if(!t(n))return this._createError("Datastore.set: Data must be a plain object.");if(n._key){if(!e(n._key))return this._createError("Datastore.set: The `_key` must be a string.");const t={filters:{_key:n._key},data:n};return await this._performAction("db.update",r,t)}return await this._performAction("db.insert",r,{data:n})}async get(t,r,a=[]){var i;if(!e(t))return this._createError("Datastore.get: Collection name must be a string.");if(!e(r))return this._createError("Datastore.get: Record key must be a string.");const n=await this._performAction("db.fetch",t,{recordKey:r,return_fields:a});if(n.ok){const t=null===(i=n.data)||void 0===i?void 0:i[0];n.data=t}return n}async delete(r,a){if(!e(r))return this._createError("Datastore.delete: Collection name must be a string.");if("string"!=typeof a&&!t(a))return this._createError("Datastore.delete: keyOrCriteria must be a string or a DSQueryCriteriaType object.");let i={};return i="string"==typeof a?{filters:{_key:a}}:a,t(i)&&t(null==i?void 0:i.filters)?await this._performAction("db.delete",r,i):this._createError("Datastore.delete: Criteria must be a DSQueryCriteriaType object with `filters`.")}async list(a,i){if(!e(a))return this._createError("Datastore.list: Collection name must be a string.");let n={limit:10};return!r(i)&&t(i)&&(n={...n,...i}),(null==n?void 0:n.filters)||(n.filters={"**":!0}),t(n)&&t(null==n?void 0:n.filters)?await this._performAction("db.fetch",a,n):this._createError("Datastore.list: Criteria must be a DSQueryCriteriaType object with `filters`.")}async update(r,a){if(!e(r))return this._createError("Datastore.update: Collection name must be a string.");if(!t(a)||!a.data)return this._createError("Datastore.update: Criteria must be a DSMutationCriteriaType object with `filters` and `data`.");const i=null==a?void 0:a.filters;if(Array.isArray(null==a?void 0:a.data)){if(0===a.data.length)return this._createError("Datastore.update: Data array cannot be empty.");if(!t(i))for(const r of a.data)if(!t(r)||!r._key||!e(r._key))return this._createError("Datastore.update: Each item must be a plain object with a valid `_key` string.")}else if(!(t(i)||t(a.data)&&a.data._key&&e(a.data._key)))return this._createError("Datastore.update: Data must be a plain object with a valid `_key` string.");return await this._performAction("db.update",r,a)}async upsert(r,a){if(!e(r))throw new Error("Datastore.upsert: Collection name must be a string.");if(!t(a.filters)||!t(a.insertData)||!t(a.updateData))throw new Error("Datastore.upsert: Criteria must be valid objects.");return a.update=null==a?void 0:a.updateData,a.insert=null==a?void 0:a.insertData,delete a.updateData,delete a.insertData,await this._performAction("db.upsert",r,a)}async search(r,a){return e(r)?t(a)&&t(a.query)?await this._performAction("db.search",r,a):this._createError("Datastore.search: Criteria must be a DSSearchCriteriaType object with `query`."):this._createError("Datastore.search: Collection name must be a string.")}async count(a,i=null){if(!e(a))return this._createError("Datastore.count: Collection name must be a string.");let n={};return!r(i)&&t(i)&&(n={...n,...i}),(null==n?void 0:n.filters)||(n.filters={"**":!0}),null===n||t(n)&&t(n.filters)?await this._performAction("db.count",a,n||{}):this._createError("Datastore.count: Criteria must be a DSQueryCriteriaType object or null.")}async archive(r,a){if(!e(r))return this._createError("Datastore.archive: Collection name must be a string.");if("string"!=typeof a&&!t(a))return this._createError("Datastore.archive: keyOrCriteria must be a string or a DSQueryCriteriaType object.");let i={};return i="string"==typeof a?{filters:{_key:a}}:a,t(i)&&t(null==i?void 0:i.filters)?await this._performAction("db.archive",r,i):this._createError("Datastore.archive: Criteria must be a DSQueryCriteriaType object with `filters`.")}async restore(t){return e(t)?await this._performAction("db.restore",null,{archiveKey:t}):this._createError("Datastore.restore: Archive key must be a string.")}}class y{constructor(){throw new Error("LLM NOT YET IMPLEMENTED")}}const k=(t,e={})=>async(r={},a={})=>{const i={...e,...a};return async function(t,e={},r={}){var a,i,n,s,o,l,u,c,h,d;if(!e.action&&!e.query)throw new Error(`Singlebase request payload missing 'action' or 'query'. URL: ${t}, Payload: ${JSON.stringify(e)}`);const f={...r.headers};null===(a=null==r?void 0:r.setHeadersAuthorizationBearer)||void 0===a||a.call(r,f);const p=r.transformRequest?await r.transformRequest(e,f):e;try{const e=await _({url:t,method:"POST",headers:f,data:p});return{ok:null!==(s=null!==(n=null===(i=null==e?void 0:e.data)||void 0===i?void 0:i.ok)&&void 0!==n?n:e.ok)&&void 0!==s&&s,data:null!==(l=null===(o=null==e?void 0:e.data)||void 0===o?void 0:o.data)&&void 0!==l?l:null,meta:null!==(c=null===(u=null==e?void 0:e.data)||void 0===u?void 0:u.meta)&&void 0!==c?c:null,error:null!==(d=null===(h=null==e?void 0:e.data)||void 0===h?void 0:h.error)&&void 0!==d?d:null,xhr:e,exception:null}}catch(e){return console.error(`Request to ${t} failed:`,e),{ok:!1,data:null,meta:null,error:e.message||"An unknown error occurred",xhr:null,exception:e}}}(t,r,i)},g=({api_url:e="https://cloud.singlebaseapis.com/api",api_key:r,options:a={},authStorageKey:i=null})=>{if(!r)throw new Error("API key is required for Singlebase initialization.");const n={auth:null,filestore:null,datastore:null,llm:null},o={"x-api-key":r,"x-sbc-sdk-client":"singlebase-js@0.1.1",Authorization:"",...t(a.headers)?a.headers:{}},{transformRequest:l,...u}=a,h={...u,headers:o,transformRequest:l,setHeadersAuthorizationBearer:t=>{var e;if(null==n?void 0:n.auth){const r=null===(e=_())||void 0===e?void 0:e.idToken;t.Authorization=r?`Bearer ${r}`:""}else t.Authorization=""}},d=k(e,h),_=()=>(n.auth||(n.auth=((t,e=null)=>{const r=s(e||"singlebase:auth");return new c(t,r)})(d,i)),n.auth);return{dispatch:d,useTransformRequest:t=>{h.transformRequest=t},useAuth:_,useFilestore:()=>(n.filestore||(n.filestore=new f(d)),n.filestore),useDatastore:()=>(n.datastore||(n.datastore=new v(d)),n.datastore),useLLM:()=>(n.llm||(n.llm=new y(d)),n.llm),initAuthUI:(t={})=>{const e=Symbol.for("singlebaseui");window[e]||(window[e]={auth:_(),authUIConfig:t})}}};export{g as default};
//# sourceMappingURL=index.js.map
